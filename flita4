#include <stdio.h>
#include <stdlib.h>

#define VERTEX_COUNT 100


int main(void)
{
    int maxlen = VERTEX_COUNT*10;
    char line[maxlen];
    int **matrix;
    int *output_vertex;

    int w = 0, h = 0, cc = 0, len;

    int removal_edge[2];


    FILE * matrixFile;

    matrix = (int**) malloc(VERTEX_COUNT * sizeof(int*));
    for(int i = 0; i < VERTEX_COUNT; i++)
    {
        matrix[i] = (int*) malloc(VERTEX_COUNT * sizeof(int));
    }
    
    matrixFile = fopen("matrix.txt", "r");
        if (matrixFile == NULL)
        {
            printf("Can't open file for reading.\n");
		    return 1;
        }

    while(fgets(line, maxlen, matrixFile))
    {
        w = 0;

        for(int i = 0; line[i]; i++)
        {
            if(line[i] != ' ' && line[i] != '\n')
            {
                if(line[i] == '0')
                    matrix[h][w] = 0;
                else
                    matrix[h][w] = 1;

                if(matrix[h][w]) printf("%d-%d\n", h+1, w+1);

                w++;
            }
        }
        h++;
    }
    
    printf("What edge to delete? Enter like 'x y': ");
    scanf("%d %d", &removal_edge[0], &removal_edge[1]);

    if(!matrix[removal_edge[0] - 1][removal_edge[1] - 1])
    {
        printf("You pick couple of vertex that haven't edge or oversize.\n");
		return 1;
    }
    matrix[removal_edge[0] - 1][removal_edge[1] - 1] = 0;
    matrix[removal_edge[1] - 1][removal_edge[0] - 1] = 0;

    printf("Sorted Vertex by weight\n");
    for(int j = 0; j< h; j++){
         for(int k = 0; k < w; k++){
             if(matrix[j][k]) printf("%d-%d\n", j+1, k+1);
         }
    }

    return 1;
}
